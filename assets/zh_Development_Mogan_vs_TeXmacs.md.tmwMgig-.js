import{_ as l,c as t,o as e,aa as i}from"./chunks/framework.C8M1Qilk.js";const m=JSON.parse('{"title":"开发对比：Mogan STEM 与 GNU TeXmacs","description":"","frontmatter":{},"headers":[],"relativePath":"zh/Development_Mogan_vs_TeXmacs.md","filePath":"zh/Development_Mogan_vs_TeXmacs.md","lastUpdated":1760598669000}'),r={name:"zh/Development_Mogan_vs_TeXmacs.md"};function n(o,a,s,h,d,g){return e(),t("div",null,[...a[0]||(a[0]=[i('<h1 id="开发对比-mogan-stem-与-gnu-texmacs" tabindex="-1">开发对比：Mogan STEM 与 GNU TeXmacs <a class="header-anchor" href="#开发对比-mogan-stem-与-gnu-texmacs" aria-label="Permalink to “开发对比：Mogan STEM 与 GNU TeXmacs”">​</a></h1><p>本文重点介绍 Mogan STEM 与 GNU TeXmacs 在开发方面的差异，为开发者和贡献者提供参考。</p><h2 id="核心开发差异" tabindex="-1">核心开发差异 <a class="header-anchor" href="#核心开发差异" aria-label="Permalink to “核心开发差异”">​</a></h2><table tabindex="0"><thead><tr><th>方面</th><th>GNU TeXmacs</th><th>Mogan STEM</th></tr></thead><tbody><tr><td><strong>发布周期</strong></td><td>不固定</td><td>每月发布</td></tr><tr><td><strong>性能重点</strong></td><td>稳定性</td><td>速度优化</td></tr><tr><td><strong>UI框架</strong></td><td>主要是 Qt 4（个别 Qt 5）</td><td>主要是 Qt 6（个别 Qt 5）</td></tr><tr><td><strong>Scheme引擎</strong></td><td>GNU Guile 1.8.x</td><td>S7 Scheme</td></tr><tr><td><strong>版本控制</strong></td><td>SVN (Savannah)</td><td>Git (Codeberg/Gitee/GitHub)</td></tr><tr><td><strong>构建系统</strong></td><td>GNU Autotools</td><td>xmake</td></tr><tr><td><strong>开发负责人</strong></td><td>Joris van der Hoeven（数学家）</td><td>沈浪熊猫儿（软件工程师）</td></tr></tbody></table><h2 id="开发工作流对比" tabindex="-1">开发工作流对比 <a class="header-anchor" href="#开发工作流对比" aria-label="Permalink to “开发工作流对比”">​</a></h2><h3 id="构建过程" tabindex="-1">构建过程 <a class="header-anchor" href="#构建过程" aria-label="Permalink to “构建过程”">​</a></h3><p><strong>GNU TeXmacs：</strong></p><ul><li>使用传统的 GNU Autotools</li><li>复杂的配置过程</li><li>编译时间较长</li><li>需要平台特定的设置</li></ul><p><strong>Mogan STEM：</strong></p><ul><li>使用现代化的 xmake 构建系统</li><li>简化的配置过程</li><li>并行构建，编译更快</li><li>跨平台构建一致性</li></ul><h3 id="版本控制与协作" tabindex="-1">版本控制与协作 <a class="header-anchor" href="#版本控制与协作" aria-label="Permalink to “版本控制与协作”">​</a></h3><p><strong>GNU TeXmacs：</strong></p><ul><li>基于 SVN 的集中式工作流</li><li>分支功能有限</li><li>集成过程较慢</li><li>单点故障风险</li></ul><p><strong>Mogan STEM：</strong></p><ul><li>基于 Git 的分布式工作流</li><li>功能分支和拉取请求</li><li>快速的代码审查和集成</li><li>多个代码仓库镜像（GitHub、Gitee、Codeberg）</li></ul><h2 id="技术架构" tabindex="-1">技术架构 <a class="header-anchor" href="#技术架构" aria-label="Permalink to “技术架构”">​</a></h2><h3 id="scheme-引擎演进" tabindex="-1">Scheme 引擎演进 <a class="header-anchor" href="#scheme-引擎演进" aria-label="Permalink to “Scheme 引擎演进”">​</a></h3><p>从 GNU Guile 1.8.x 到 S7 Scheme 的转变代表了重大的技术改进：</p><ul><li><strong>性能</strong>：S7 Scheme 提供更好的执行速度</li><li><strong>内存</strong>：更高效的内存管理</li><li><strong>现代特性</strong>：更好地支持当代编程模式</li><li><strong>维护</strong>：活跃的开发和社区支持</li></ul><h3 id="qt-框架现代化" tabindex="-1">Qt 框架现代化 <a class="header-anchor" href="#qt-框架现代化" aria-label="Permalink to “Qt 框架现代化”">​</a></h3><p>Mogan 迁移到 Qt 6 带来了多项优势：</p><ul><li><strong>性能</strong>：更好的渲染和 UI 响应性</li><li><strong>现代 UI</strong>：时尚的外观和体验</li><li><strong>跨平台</strong>：改进的平台集成</li><li><strong>面向未来</strong>：长期支持和更新</li></ul><h2 id="插件开发" tabindex="-1">插件开发 <a class="header-anchor" href="#插件开发" aria-label="Permalink to “插件开发”">​</a></h2><h3 id="插件架构差异" tabindex="-1">插件架构差异 <a class="header-anchor" href="#插件架构差异" aria-label="Permalink to “插件架构差异”">​</a></h3><p><strong>GNU TeXmacs：</strong></p><ul><li>单体插件系统</li><li>扩展性选项有限</li><li>复杂的插件开发过程</li></ul><p><strong>Mogan STEM：</strong></p><ul><li>模块化插件架构</li><li>支持多种语言（Python、C++、Scheme）</li><li>插件中心便于分发</li><li>用于国际化的语言特定插件</li></ul><h3 id="开发工具" tabindex="-1">开发工具 <a class="header-anchor" href="#开发工具" aria-label="Permalink to “开发工具”">​</a></h3><p>Mogan 提供了增强的开发功能：</p><ul><li><strong>调试</strong>：更好的调试工具和错误报告</li><li><strong>文档</strong>：全面的 API 文档</li><li><strong>测试</strong>：自动化测试框架</li><li><strong>社区</strong>：活跃的开发社区支持</li></ul><h2 id="性能优化" tabindex="-1">性能优化 <a class="header-anchor" href="#性能优化" aria-label="Permalink to “性能优化”">​</a></h2><h3 id="启动性能" tabindex="-1">启动性能 <a class="header-anchor" href="#启动性能" aria-label="Permalink to “启动性能”">​</a></h3><p>Mogan STEM 实现了多项优化：</p><ul><li>组件的延迟加载</li><li>优化的初始化序列</li><li>减少内存占用</li><li>更快的文件加载和解析</li></ul><h3 id="运行时性能" tabindex="-1">运行时性能 <a class="header-anchor" href="#运行时性能" aria-label="Permalink to “运行时性能”">​</a></h3><p>关键的性能改进包括：</p><ul><li>高效的渲染管道</li><li>优化的数学公式处理</li><li>改进的 UI 响应性</li><li>更好的资源管理</li></ul><h2 id="开发理念" tabindex="-1">开发理念 <a class="header-anchor" href="#开发理念" aria-label="Permalink to “开发理念”">​</a></h2><h3 id="gnu-texmacs-方法" tabindex="-1">GNU TeXmacs 方法 <a class="header-anchor" href="#gnu-texmacs-方法" aria-label="Permalink to “GNU TeXmacs 方法”">​</a></h3><ul><li>学术研究重点</li><li>数学正确性优先</li><li>保守的功能采用</li><li>稳定性优于性能</li></ul><h3 id="mogan-stem-方法" tabindex="-1">Mogan STEM 方法 <a class="header-anchor" href="#mogan-stem-方法" aria-label="Permalink to “Mogan STEM 方法”">​</a></h3><ul><li>工程驱动的开发</li><li>用户体验优化</li><li>快速迭代和改进</li><li>性能和可用性平衡</li></ul><h2 id="参与开发" tabindex="-1">参与开发 <a class="header-anchor" href="#参与开发" aria-label="Permalink to “参与开发”">​</a></h2><h3 id="对于-mogan-stem-开发者" tabindex="-1">对于 Mogan STEM 开发者 <a class="header-anchor" href="#对于-mogan-stem-开发者" aria-label="Permalink to “对于 Mogan STEM 开发者”">​</a></h3><ol><li><strong>代码仓库</strong>：<a href="https://github.com/XmacsLabs/mogan" target="_blank" rel="">https://github.com/XmacsLabs/mogan</a></li><li><strong>构建系统</strong>：xmake（简单的 <code>xmake build stem</code>）</li><li><strong>文档</strong>：每个平台的综合指南</li><li><strong>社区</strong>：活跃的 Discord 和 GitHub 讨论</li></ol><h3 id="开发资源" tabindex="-1">开发资源 <a class="header-anchor" href="#开发资源" aria-label="Permalink to “开发资源”">​</a></h3><ul><li><a href="./Develop_on_Linux.html">Linux 开发指南</a></li><li><a href="./Develop_on_macOS.html">macOS 开发指南</a></li><li><a href="./Develop_on_Windows.html">Windows 开发指南</a></li><li><a href="./Git.html">Git 工作流指南</a></li></ul><h2 id="未来开发方向" tabindex="-1">未来开发方向 <a class="header-anchor" href="#未来开发方向" aria-label="Permalink to “未来开发方向”">​</a></h2><p>Mogan STEM 继续发展，重点关注：</p><ul><li><strong>AI 集成</strong>：内置 AI 功能（Liii STEM）</li><li><strong>云协作</strong>：实时协作编辑</li><li><strong>移动支持</strong>：触控友好界面</li><li><strong>扩展格式</strong>：支持更多文档格式</li><li><strong>性能</strong>：持续优化工作</li></ul><h2 id="结论" tabindex="-1">结论 <a class="header-anchor" href="#结论" aria-label="Permalink to “结论”">​</a></h2><p>虽然两个项目共享相同的基础，但 Mogan STEM 代表了科学文档编辑器开发的现代化方法，强调性能、用户体验和当代开发实践。以工程为重点的方法和现代化工具使其对开发者更易于访问，对用户需求响应更快。</p><p>如需包括面向用户功能的全面比较，请参阅<a href="./Mogan_versus_TeXmacs.html">完整的 Mogan 与 GNU TeXmacs 比较</a>。</p>',54)])])}const b=l(r,[["render",n]]);export{m as __pageData,b as default};
