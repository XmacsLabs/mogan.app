import{_ as i,c as a,o as e,aa as l}from"./chunks/framework.C8M1Qilk.js";const g=JSON.parse('{"title":"Windows平台开发指南","description":"","frontmatter":{},"headers":[],"relativePath":"zh/Develop_on_Windows.md","filePath":"zh/Develop_on_Windows.md","lastUpdated":1760594121000}'),t={name:"zh/Develop_on_Windows.md"};function h(n,s,k,p,r,o){return e(),a("div",null,[...s[0]||(s[0]=[l(`<h1 id="windows平台开发指南" tabindex="-1">Windows平台开发指南 <a class="header-anchor" href="#windows平台开发指南" aria-label="Permalink to “Windows平台开发指南”">​</a></h1><h2 id="第一步-安装工具与依赖" tabindex="-1">第一步：安装工具与依赖 <a class="header-anchor" href="#第一步-安装工具与依赖" aria-label="Permalink to “第一步：安装工具与依赖”">​</a></h2><h3 id="安装-visual-studio-2022-msvc-14-44-35211" tabindex="-1">安装 Visual Studio 2022 (MSVC 14.44.35211) <a class="header-anchor" href="#安装-visual-studio-2022-msvc-14-44-35211" aria-label="Permalink to “安装 Visual Studio 2022 (MSVC 14.44.35211)”">​</a></h3><ul><li>安装工作负载：<strong>“使用 C++ 的桌面开发”</strong></li><li>勾选： <ul><li><strong>MSVC 14.44.35211</strong></li><li><strong>Windows 10/11 SDK</strong></li></ul></li><li>打开 VS Installer，选择 <strong>Desktop development with C++</strong></li><li>勾选 <strong>MSVC、Windows 10/11 SDK</strong></li><li>安装完成后，启动一次 VS 以初始化组件</li></ul><h3 id="安装-xmake" tabindex="-1">安装 xmake <a class="header-anchor" href="#安装-xmake" aria-label="Permalink to “安装 xmake”">​</a></h3><h3 id="推荐使用-scoop-或-choco-安装。任选其一" tabindex="-1">推荐使用 <strong>scoop</strong> 或 <strong>choco</strong> 安装。任选其一： <a class="header-anchor" href="#推荐使用-scoop-或-choco-安装。任选其一" aria-label="Permalink to “推荐使用 scoop 或 choco 安装。任选其一：”">​</a></h3><ul><li><p><strong>scoop：</strong></p><div class="language-powershell"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">scoop install xmake</span></span></code></pre></div></li><li><p><strong>chocolatey</strong>：</p><div class="language-powershell"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">choco  install xmake</span></span></code></pre></div></li><li><p>验证：</p><div class="language-powershell"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">xmake </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">version</span></span></code></pre></div></li></ul><h2 id="第二步-获取源码进行编译运行" tabindex="-1">第二步：获取源码进行编译运行 <a class="header-anchor" href="#第二步-获取源码进行编译运行" aria-label="Permalink to “第二步：获取源码进行编译运行”">​</a></h2><h3 id="选择你自己的工作目录-例如-e-testfile" tabindex="-1">选择你自己的工作目录，例如 E:\\TestFile： <a class="header-anchor" href="#选择你自己的工作目录-例如-e-testfile" aria-label="Permalink to “选择你自己的工作目录，例如 E:\\TestFile：”">​</a></h3><div class="language-powershell"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cd E:\\TestFile</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git clone git@gitee.com:XmacsLabs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mogan.git</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cd mogan</span></span></code></pre></div><h3 id="使用-xmake-配置与构建" tabindex="-1">使用 xmake 配置与构建 <a class="header-anchor" href="#使用-xmake-配置与构建" aria-label="Permalink to “使用 xmake 配置与构建”">​</a></h3><h3 id="xmake-项目配置" tabindex="-1">xmake 项目配置 <a class="header-anchor" href="#xmake-项目配置" aria-label="Permalink to “xmake 项目配置”">​</a></h3><div class="language-powershell"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">xmake config </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">yes </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">vD </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">m releasedbg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plat</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">windows </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">vs_runtime</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MT</span></span></code></pre></div><h3 id="之前构建失败-先清理旧缓存" tabindex="-1">之前构建失败，先清理旧缓存 <a class="header-anchor" href="#之前构建失败-先清理旧缓存" aria-label="Permalink to “之前构建失败，先清理旧缓存”">​</a></h3><div class="language-powershell"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">xmake f </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">c</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">xmake c </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a</span></span></code></pre></div><h3 id="编译项目" tabindex="-1">编译项目 <a class="header-anchor" href="#编译项目" aria-label="Permalink to “编译项目”">​</a></h3><div class="language-powershell"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">xmake build stem</span></span></code></pre></div><h3 id="安装目标" tabindex="-1">安装目标 <a class="header-anchor" href="#安装目标" aria-label="Permalink to “安装目标”">​</a></h3><div class="language-powershell"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">xmake install stem</span></span></code></pre></div><h3 id="运行程序" tabindex="-1">运行程序 <a class="header-anchor" href="#运行程序" aria-label="Permalink to “运行程序”">​</a></h3><div class="language-powershell"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">xmake run stem</span></span></code></pre></div><h2 id="在vscode下开发-可选" tabindex="-1">在VSCode下开发（可选） <a class="header-anchor" href="#在vscode下开发-可选" aria-label="Permalink to “在VSCode下开发（可选）”">​</a></h2><p>如果用VSCode来开发，xmake可以生成<code>compile_command.json</code>文件。如果提供这份文件，VSCode的C++插件会根据这个文件来识别项目结构，提供正确的语义高亮等语义提示。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> project</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --kind=compile_commands</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./.vscode</span></span></code></pre></div><p>修改<code>.vscode/c_cpp_properties.json</code>文件才能使刚刚生成的<code>compile_command.json</code>文件生效。</p><div class="language-jsonc"><button title="Copy Code" class="copy"></button><span class="lang">jsonc</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">    {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;configurations&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // other configs</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;compilerPath&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;your configuration&gt;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;cppStandard&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;gnu++17&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;intelliSenseMode&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;windows-gcc-x64&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;compileCommands&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.vscode/compile_commands.json&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,26)])])}const c=i(t,[["render",h]]);export{g as __pageData,c as default};
