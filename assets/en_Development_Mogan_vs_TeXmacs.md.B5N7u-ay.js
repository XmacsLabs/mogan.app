import{_ as o,c as t,o as i,aa as a}from"./chunks/framework.C8M1Qilk.js";const h=JSON.parse('{"title":"Development: Mogan vs GNU TeXmacs","description":"","frontmatter":{},"headers":[],"relativePath":"en/Development_Mogan_vs_TeXmacs.md","filePath":"en/Development_Mogan_vs_TeXmacs.md","lastUpdated":1760930509000}'),r={name:"en/Development_Mogan_vs_TeXmacs.md"};function n(l,e,s,c,m,d){return i(),t("div",null,[...e[0]||(e[0]=[a('<h1 id="development-mogan-vs-gnu-texmacs" tabindex="-1">Development: Mogan vs GNU TeXmacs <a class="header-anchor" href="#development-mogan-vs-gnu-texmacs" aria-label="Permalink to “Development: Mogan vs GNU TeXmacs”">​</a></h1><p>This article focuses on the development differences between Mogan STEM and GNU TeXmacs, providing insights for developers and contributors.</p><h2 id="core-development-differences" tabindex="-1">Core Development Differences <a class="header-anchor" href="#core-development-differences" aria-label="Permalink to “Core Development Differences”">​</a></h2><table tabindex="0"><thead><tr><th>Aspect</th><th>GNU TeXmacs</th><th>Mogan STEM</th></tr></thead><tbody><tr><td><strong>Release Cycle</strong></td><td>Not fixed</td><td>Monthly releases</td></tr><tr><td><strong>Performance Focus</strong></td><td>Stability</td><td>Speed optimization</td></tr><tr><td><strong>UI Framework</strong></td><td>Mainly Qt 4 (some Qt 5)</td><td>Mainly Qt 6 (some Qt 5)</td></tr><tr><td><strong>Scheme Engine</strong></td><td>GNU Guile 1.8.x</td><td>S7 Scheme</td></tr><tr><td><strong>Version Control</strong></td><td>SVN (Savannah)</td><td>Git (Codeberg/Gitee/GitHub)</td></tr><tr><td><strong>Build System</strong></td><td>GNU Autotools</td><td>xmake</td></tr><tr><td><strong>Development Lead</strong></td><td>Joris van der Hoeven (Mathematician)</td><td>Darcy Shen (Software Engineer)</td></tr></tbody></table><h2 id="development-workflow-comparison" tabindex="-1">Development Workflow Comparison <a class="header-anchor" href="#development-workflow-comparison" aria-label="Permalink to “Development Workflow Comparison”">​</a></h2><h3 id="build-process" tabindex="-1">Build Process <a class="header-anchor" href="#build-process" aria-label="Permalink to “Build Process”">​</a></h3><p><strong>GNU TeXmacs:</strong></p><ul><li>Uses traditional GNU Autotools</li><li>Complex configuration process</li><li>Slower compilation times</li><li>Platform-specific setup required</li></ul><p><strong>Mogan STEM:</strong></p><ul><li>Uses modern xmake build system</li><li>Simplified configuration</li><li>Faster compilation with parallel builds</li><li>Cross-platform build consistency</li></ul><h3 id="version-control-and-collaboration" tabindex="-1">Version Control and Collaboration <a class="header-anchor" href="#version-control-and-collaboration" aria-label="Permalink to “Version Control and Collaboration”">​</a></h3><p><strong>GNU TeXmacs:</strong></p><ul><li>SVN-based centralized workflow</li><li>Limited branching capabilities</li><li>Slower integration process</li><li>Single point of failure</li></ul><p><strong>Mogan STEM:</strong></p><ul><li>Git-based distributed workflow</li><li>Feature branches and pull requests</li><li>Faster code review and integration</li><li>Multiple repository mirrors (GitHub, Gitee, Codeberg)</li></ul><h2 id="technical-architecture" tabindex="-1">Technical Architecture <a class="header-anchor" href="#technical-architecture" aria-label="Permalink to “Technical Architecture”">​</a></h2><h3 id="scheme-engine-evolution" tabindex="-1">Scheme Engine Evolution <a class="header-anchor" href="#scheme-engine-evolution" aria-label="Permalink to “Scheme Engine Evolution”">​</a></h3><p>The transition from GNU Guile 1.8.x to S7 Scheme represents a significant technical improvement:</p><ul><li><strong>Performance</strong>: S7 Scheme offers better execution speed</li><li><strong>Memory</strong>: More efficient memory management</li><li><strong>Modern Features</strong>: Better support for contemporary programming patterns</li><li><strong>Maintenance</strong>: Active development and community support</li></ul><h3 id="qt-framework-modernization" tabindex="-1">Qt Framework Modernization <a class="header-anchor" href="#qt-framework-modernization" aria-label="Permalink to “Qt Framework Modernization”">​</a></h3><p>Mogan&#39;s migration to Qt 6 brings several advantages:</p><ul><li><strong>Performance</strong>: Better rendering and UI responsiveness</li><li><strong>Modern UI</strong>: Contemporary look and feel</li><li><strong>Cross-platform</strong>: Improved platform integration</li><li><strong>Future-proof</strong>: Long-term support and updates</li></ul><h2 id="plugin-development" tabindex="-1">Plugin Development <a class="header-anchor" href="#plugin-development" aria-label="Permalink to “Plugin Development”">​</a></h2><h3 id="plugin-architecture-differences" tabindex="-1">Plugin Architecture Differences <a class="header-anchor" href="#plugin-architecture-differences" aria-label="Permalink to “Plugin Architecture Differences”">​</a></h3><p><strong>GNU TeXmacs:</strong></p><ul><li>Monolithic plugin system</li><li>Limited extensibility options</li><li>Complex plugin development process</li></ul><p><strong>Mogan STEM:</strong></p><ul><li>Modular plugin architecture</li><li>Support for multiple languages (Python, C++, Scheme)</li><li>Plugin Center for easy distribution</li><li>Language-specific plugins for internationalization</li></ul><h3 id="development-tools" tabindex="-1">Development Tools <a class="header-anchor" href="#development-tools" aria-label="Permalink to “Development Tools”">​</a></h3><p>Mogan provides enhanced development capabilities:</p><ul><li><strong>Debugging</strong>: Better debugging tools and error reporting</li><li><strong>Documentation</strong>: Comprehensive API documentation</li><li><strong>Testing</strong>: Automated testing framework</li><li><strong>Community</strong>: Active developer community support</li></ul><h2 id="performance-optimization" tabindex="-1">Performance Optimization <a class="header-anchor" href="#performance-optimization" aria-label="Permalink to “Performance Optimization”">​</a></h2><h3 id="startup-performance" tabindex="-1">Startup Performance <a class="header-anchor" href="#startup-performance" aria-label="Permalink to “Startup Performance”">​</a></h3><p>Mogan STEM implements several optimizations:</p><ul><li>Lazy loading of components</li><li>Optimized initialization sequences</li><li>Reduced memory footprint</li><li>Faster file loading and parsing</li></ul><h3 id="runtime-performance" tabindex="-1">Runtime Performance <a class="header-anchor" href="#runtime-performance" aria-label="Permalink to “Runtime Performance”">​</a></h3><p>Key performance improvements include:</p><ul><li>Efficient rendering pipelines</li><li>Optimized mathematical formula processing</li><li>Improved UI responsiveness</li><li>Better resource management</li></ul><h2 id="development-philosophy" tabindex="-1">Development Philosophy <a class="header-anchor" href="#development-philosophy" aria-label="Permalink to “Development Philosophy”">​</a></h2><h3 id="gnu-texmacs-approach" tabindex="-1">GNU TeXmacs Approach <a class="header-anchor" href="#gnu-texmacs-approach" aria-label="Permalink to “GNU TeXmacs Approach”">​</a></h3><ul><li>Academic research focus</li><li>Mathematical correctness priority</li><li>Conservative feature adoption</li><li>Stability over performance</li></ul><h3 id="mogan-stem-approach" tabindex="-1">Mogan STEM Approach <a class="header-anchor" href="#mogan-stem-approach" aria-label="Permalink to “Mogan STEM Approach”">​</a></h3><ul><li>Engineering-driven development</li><li>User experience optimization</li><li>Rapid iteration and improvement</li><li>Performance and usability balance</li></ul><h2 id="contributing-to-development" tabindex="-1">Contributing to Development <a class="header-anchor" href="#contributing-to-development" aria-label="Permalink to “Contributing to Development”">​</a></h2><h3 id="for-mogan-stem-developers" tabindex="-1">For Mogan STEM Developers <a class="header-anchor" href="#for-mogan-stem-developers" aria-label="Permalink to “For Mogan STEM Developers”">​</a></h3><ol><li><strong>Repository</strong>: <a href="https://github.com/XmacsLabs/mogan" target="_blank" rel="">https://github.com/XmacsLabs/mogan</a></li><li><strong>Build System</strong>: xmake (simple <code>xmake build stem</code>)</li><li><strong>Documentation</strong>: Comprehensive guides for each platform</li><li><strong>Community</strong>: Active Discord and GitHub discussions</li></ol><h3 id="development-resources" tabindex="-1">Development Resources <a class="header-anchor" href="#development-resources" aria-label="Permalink to “Development Resources”">​</a></h3><ul><li><a href="./Develop_on_Linux.html">Linux Development Guide</a></li><li><a href="./Develop_on_macOS.html">macOS Development Guide</a></li><li><a href="./Develop_on_Windows.html">Windows Development Guide</a></li><li><a href="./Git.html">Git Workflow Guide</a></li></ul><h2 id="future-development-direction" tabindex="-1">Future Development Direction <a class="header-anchor" href="#future-development-direction" aria-label="Permalink to “Future Development Direction”">​</a></h2><p>Mogan STEM continues to evolve with focus on:</p><ul><li><strong>AI Integration</strong>: Built-in AI capabilities (Liii STEM)</li><li><strong>Cloud Collaboration</strong>: Real-time collaborative editing</li><li><strong>Mobile Support</strong>: Touch-friendly interfaces</li><li><strong>Extended Formats</strong>: Support for more document formats</li><li><strong>Performance</strong>: Continued optimization efforts</li></ul><h2 id="conclusion" tabindex="-1">Conclusion <a class="header-anchor" href="#conclusion" aria-label="Permalink to “Conclusion”">​</a></h2><p>While both projects share the same foundation, Mogan STEM represents a modernized approach to scientific document editor development, emphasizing performance, user experience, and contemporary development practices. The engineering-focused approach and modern tooling make it more accessible for developers and more responsive to user needs.</p><p>For a comprehensive comparison including user-facing features, see the <a href="./Mogan_versus_TeXmacs.html">complete Mogan vs GNU TeXmacs comparison</a>.</p>',54)])])}const u=o(r,[["render",n]]);export{h as __pageData,u as default};
