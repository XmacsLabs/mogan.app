import{_ as e,c as s,a2 as t,o as i}from"./chunks/framework.BLTIpkzl.js";const u=JSON.parse('{"title":"macOS平台开发指南","description":"","frontmatter":{},"headers":[],"relativePath":"zh/guide/Develop_on_macOS.md","filePath":"zh/guide/Develop_on_macOS.md","lastUpdated":1738382165000}'),n={name:"zh/guide/Develop_on_macOS.md"};function p(o,a,l,h,c,r){return i(),s("div",null,a[0]||(a[0]=[t(`<h1 id="macos平台开发指南" tabindex="-1">macOS平台开发指南 <a class="header-anchor" href="#macos平台开发指南" aria-label="Permalink to &quot;macOS平台开发指南&quot;">​</a></h1><p>本开发指南针对墨干理工套件中的墨干（Mogan Research）撰写，墨干理工套件中的其它组件可以参考。</p><h2 id="第一步-安装xmake和xrepo" tabindex="-1">第一步：安装xmake和xrepo <a class="header-anchor" href="#第一步-安装xmake和xrepo" aria-label="Permalink to &quot;第一步：安装xmake和xrepo&quot;">​</a></h2><p>对于Homebrew:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>brew install xmake qt</span></span>
<span class="line"><span>brew install pkg-config</span></span></code></pre></div><p>有时候需要保持xrepo是最新的，以保证使用最新的依赖的构建定义。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>xrepo update-repo</span></span></code></pre></div><h2 id="第二步-配置" tabindex="-1">第二步：配置 <a class="header-anchor" href="#第二步-配置" aria-label="Permalink to &quot;第二步：配置&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>xmake config --yes -c --qt=/opt/homebrew/share/qt/</span></span></code></pre></div><p>请按需调整Qt相关目录，并不一定是<code>/opt/homebrew/share/qt</code>。</p><h2 id="第三步-构建" tabindex="-1">第三步：构建 <a class="header-anchor" href="#第三步-构建" aria-label="Permalink to &quot;第三步：构建&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>xmake build research</span></span></code></pre></div><h2 id="第四步-测试" tabindex="-1">第四步：测试 <a class="header-anchor" href="#第四步-测试" aria-label="Permalink to &quot;第四步：测试&quot;">​</a></h2><p>见<a href="./Test.html">如何测试</a>。</p><h2 id="第五步-启动墨干" tabindex="-1">第五步：启动墨干 <a class="header-anchor" href="#第五步-启动墨干" aria-label="Permalink to &quot;第五步：启动墨干&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> research</span></span></code></pre></div>`,16)]))}const m=e(n,[["render",p]]);export{u as __pageData,m as default};
