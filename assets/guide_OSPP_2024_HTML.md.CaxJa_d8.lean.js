import{_ as t,c as o,a2 as i,o as a}from"./chunks/framework.YPpNXepj.js";const h=JSON.parse('{"title":"Project: Conversion from TeXmacs format to HTML and docx","description":"","frontmatter":{},"headers":[],"relativePath":"guide/OSPP_2024_HTML.md","filePath":"guide/OSPP_2024_HTML.md","lastUpdated":1736322693000}'),r={name:"guide/OSPP_2024_HTML.md"};function n(l,e,c,s,d,u){return a(),o("div",null,e[0]||(e[0]=[i('<h1 id="project-conversion-from-texmacs-format-to-html-and-docx" tabindex="-1">Project: Conversion from TeXmacs format to HTML and docx <a class="header-anchor" href="#project-conversion-from-texmacs-format-to-html-and-docx" aria-label="Permalink to &quot;Project: Conversion from TeXmacs format to HTML and docx&quot;">​</a></h1><h2 id="for-students" tabindex="-1">For Students <a class="header-anchor" href="#for-students" aria-label="Permalink to &quot;For Students&quot;">​</a></h2><ul><li>Expected Code Percentage <ul><li>Scheme Code &gt;= 80%</li><li>C++ Code &lt;= 20%</li></ul></li><li>Selection Criteria <ol><li>One public pull request to add C++ unit tests to the Mogan repo</li><li>One public pull request to add Scheme unit tests to the Mogan repo</li><li>The students must implement pandoc binary plugin and docx data plugin by themselves privately to prove that he/she can complete the project</li></ol></li></ul><p>Please send the implementation of the pandoc integration to me privately via email: <code>da AT liii.pro</code>.</p><h2 id="project-info" tabindex="-1">Project Info <a class="header-anchor" href="#project-info" aria-label="Permalink to &quot;Project Info&quot;">​</a></h2><ul><li>Name: Conversion from TeXmacs format to HTML and docx</li><li>Mentor: Darcy Shen</li><li>Difficulty: Basic</li></ul><h2 id="project-description" tabindex="-1">Project Description <a class="header-anchor" href="#project-description" aria-label="Permalink to &quot;Project Description&quot;">​</a></h2><p>Exporting to docx format for TeXmacs documents is a frequently requested feature from TeXmacs users. We can use pandoc to achieve it.</p><p>In this project, we need to implement conversion for TM format -&gt; HTML format -&gt; DOCX format. The TM-&gt;HTML conversion has been implemented. And the HTML-&gt;DOCX could be completed by <code>pandoc</code>. And you need to improve the TM-&gt;HTML quality to improve the TM-&gt;DOCX quality.</p><p>The documents in Xmacs Planet could be served as the testing resources. Github Pages CD should be setup for the Xmacs Planet.</p><h2 id="project-notes" tabindex="-1">Project Notes <a class="header-anchor" href="#project-notes" aria-label="Permalink to &quot;Project Notes&quot;">​</a></h2><p>Related official docs:</p><ul><li>Binary Plugin: <a href="https://mogan.app/guide/plugin_binary.html" target="_blank" rel="noreferrer">https://mogan.app/guide/plugin_binary.html</a></li><li>Data Plugin: <a href="https://mogan.app/guide/plugin_data.html" target="_blank" rel="noreferrer">https://mogan.app/guide/plugin_data.html</a> (missing now on 2024/04/15, will be available later)</li></ul><p>TODO and not TODO: HTML-&gt;DOCX conversion is the only missing part now. You need to complete the missing part using <code>pandoc</code>, creating pull requests to <code>pandoc</code> to improve the HTML-&gt;DOCX conversion is not a goal of this project. And in this project, we are focusing on improving the TM-&gt;HTML conversion. HTML-&gt;TM conversion is not a goal of this project. We care more on code quality, please focus on a small area and keep improving the conversion quality.</p><p>Expectation on time scheduling: <code>pandoc</code> binary plugin, <code>docx</code> binary plugin and Github/Gitee Pages Continous delivery should be completed within 1 or 2 weeks.</p><h2 id="output-requirements" tabindex="-1">Output Requirements <a class="header-anchor" href="#output-requirements" aria-label="Permalink to &quot;Output Requirements&quot;">​</a></h2><ul><li>Implement a <code>pandoc</code> binary plugin (make it work on Linux/Windows/macOS with the help of mentors) <ul><li><code>(find-binary-pandoc)</code></li><li><code>(version-binary-pandoc)</code></li><li><code>(has-binary-pandoc?)</code></li></ul></li><li>Implement a <code>docx</code> data plugin <ul><li>define conversion from HTML to DOCX</li><li>add the menu entry <code>File-&gt;Export-&gt;DOCX</code></li></ul></li><li>Github/Gitee Pages Continous delivery for the <a href="https://github.com/XmacsLabs/planet" target="_blank" rel="noreferrer">planet</a><ul><li>just choose one of Github Action and Gitee Go Pipeline</li></ul></li><li>Improve TM2HTML conversion <ul><li>Minimal reproducer and unit tests</li><li>Generated HTML should be HTML 5</li><li>Generated MathML should also be improved</li><li>Generated HTML should cover different styles like <ul><li>book (eg. <a href="https://github.com/XmacsLabs/interactive-sicp" target="_blank" rel="noreferrer">interactive-sicp</a>)</li><li>beamer</li><li>generic</li><li>course</li><li>exam</li><li>projector</li></ul></li></ul></li></ul><h2 id="project-technical-requirements" tabindex="-1">Project Technical Requirements <a class="header-anchor" href="#project-technical-requirements" aria-label="Permalink to &quot;Project Technical Requirements&quot;">​</a></h2><ul><li>Scheme, xmake, C++</li><li>Github Action/Gitee Go</li><li>Understanding the data plugin in Mogan</li><li>Understanding the binary plugin in Mogan</li></ul><h2 id="project-repository" tabindex="-1">Project Repository <a class="header-anchor" href="#project-repository" aria-label="Permalink to &quot;Project Repository&quot;">​</a></h2><ul><li><a href="https://github.com/XmacsLabs/mogan" target="_blank" rel="noreferrer">https://github.com/XmacsLabs/mogan</a></li><li><a href="https://github.com/XmacsLabs/planet" target="_blank" rel="noreferrer">https://github.com/XmacsLabs/planet</a></li></ul>',21)]))}const m=t(r,[["render",n]]);export{h as __pageData,m as default};
