import{_ as i,c as a,o as e,aa as l}from"./chunks/framework.C8M1Qilk.js";const c=JSON.parse('{"title":"Developing for Windows","description":"","frontmatter":{},"headers":[],"relativePath":"en/Develop_on_Windows.md","filePath":"en/Develop_on_Windows.md","lastUpdated":1760594121000}'),t={name:"en/Develop_on_Windows.md"};function n(h,s,o,r,p,k){return e(),a("div",null,[...s[0]||(s[0]=[l(`<h1 id="developing-for-windows" tabindex="-1">Developing for Windows <a class="header-anchor" href="#developing-for-windows" aria-label="Permalink to “Developing for Windows”">​</a></h1><h2 id="step-1-install-tools-and-dependencies" tabindex="-1">Step 1: Install tools and dependencies <a class="header-anchor" href="#step-1-install-tools-and-dependencies" aria-label="Permalink to “Step 1: Install tools and dependencies”">​</a></h2><h3 id="install-visual-studio-2022-msvc-14-44-35211" tabindex="-1">Install Visual Studio 2022 (MSVC 14.44.35211) <a class="header-anchor" href="#install-visual-studio-2022-msvc-14-44-35211" aria-label="Permalink to “Install Visual Studio 2022 (MSVC 14.44.35211)”">​</a></h3><ul><li>Install workload: <strong>&quot;Desktop development with C++&quot;</strong></li><li>Check: <ul><li><strong>MSVC 14.44.35211</strong></li><li><strong>Windows 10/11 SDK</strong></li></ul></li><li>Open VS Installer, select <strong>Desktop development with C++</strong></li><li>Check <strong>MSVC, Windows 10/11 SDK</strong></li><li>After installation, launch VS once to initialize components</li></ul><h3 id="install-xmake" tabindex="-1">Install xmake <a class="header-anchor" href="#install-xmake" aria-label="Permalink to “Install xmake”">​</a></h3><h3 id="recommended-to-install-using-scoop-or-choco-choose-either" tabindex="-1">Recommended to install using <strong>scoop</strong> or <strong>choco</strong>. Choose either: <a class="header-anchor" href="#recommended-to-install-using-scoop-or-choco-choose-either" aria-label="Permalink to “Recommended to install using scoop or choco. Choose either:”">​</a></h3><ul><li><p><strong>scoop:</strong></p><div class="language-powershell"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">scoop install xmake</span></span></code></pre></div></li><li><p><strong>chocolatey</strong>:</p><div class="language-powershell"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">choco  install xmake</span></span></code></pre></div></li><li><p>Verify:</p><div class="language-powershell"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">xmake </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">version</span></span></code></pre></div></li></ul><h2 id="step-2-get-source-code-and-compile-run" tabindex="-1">Step 2: Get source code and compile run <a class="header-anchor" href="#step-2-get-source-code-and-compile-run" aria-label="Permalink to “Step 2: Get source code and compile run”">​</a></h2><h3 id="choose-your-own-working-directory-for-example-e-testfile" tabindex="-1">Choose your own working directory, for example E:\\TestFile: <a class="header-anchor" href="#choose-your-own-working-directory-for-example-e-testfile" aria-label="Permalink to “Choose your own working directory, for example E:\\TestFile:”">​</a></h3><div class="language-powershell"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cd E:\\TestFile</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git clone git@gitee.com:XmacsLabs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mogan.git</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cd mogan</span></span></code></pre></div><h3 id="use-xmake-to-configure-and-build" tabindex="-1">Use xmake to configure and build <a class="header-anchor" href="#use-xmake-to-configure-and-build" aria-label="Permalink to “Use xmake to configure and build”">​</a></h3><h3 id="xmake-project-configuration" tabindex="-1">xmake project configuration <a class="header-anchor" href="#xmake-project-configuration" aria-label="Permalink to “xmake project configuration”">​</a></h3><div class="language-powershell"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">xmake config </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">yes </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">vD </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">m releasedbg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plat</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">windows </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">vs_runtime</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MT</span></span></code></pre></div><h3 id="if-previous-build-failed-clear-old-cache-first" tabindex="-1">If previous build failed, clear old cache first <a class="header-anchor" href="#if-previous-build-failed-clear-old-cache-first" aria-label="Permalink to “If previous build failed, clear old cache first”">​</a></h3><div class="language-powershell"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">xmake f </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">c</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">xmake c </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a</span></span></code></pre></div><h3 id="build-project" tabindex="-1">Build project <a class="header-anchor" href="#build-project" aria-label="Permalink to “Build project”">​</a></h3><div class="language-powershell"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">xmake build stem</span></span></code></pre></div><h3 id="install-target" tabindex="-1">Install target <a class="header-anchor" href="#install-target" aria-label="Permalink to “Install target”">​</a></h3><div class="language-powershell"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">xmake install stem</span></span></code></pre></div><h3 id="run-program" tabindex="-1">Run program <a class="header-anchor" href="#run-program" aria-label="Permalink to “Run program”">​</a></h3><div class="language-powershell"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">xmake run stem</span></span></code></pre></div><h2 id="optional-vscode-support" tabindex="-1">Optional: Vscode support <a class="header-anchor" href="#optional-vscode-support" aria-label="Permalink to “Optional: Vscode support”">​</a></h2><p>Developers using Vscode can use xmake to generate <code>compile_command.json</code>, which can be recognized by C/C++ plugin to provide semantics highlight and so on.</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> project</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --kind=compile_commands</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./.vscode</span></span></code></pre></div><p>then modify <code>.vscode/c_cpp_properties.json</code> to tell C++ lsp configs of this project:</p><div class="language-jsonc"><button title="Copy Code" class="copy"></button><span class="lang">jsonc</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">    {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;configurations&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // other configs</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;compilerPath&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;your configuration&gt;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;cppStandard&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;gnu++17&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;intelliSenseMode&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;windows-gcc-x64&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;compileCommands&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.vscode/compile_commands.json&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,26)])])}const g=i(t,[["render",n]]);export{c as __pageData,g as default};
