import{_ as e,c as d,a2 as a,o}from"./chunks/framework.YPpNXepj.js";const u=JSON.parse('{"title":"墨干理工套件和GNU TeXmacs的区别","description":"","frontmatter":{},"headers":[],"relativePath":"zh/guide/Mogan_versus_TeXmacs.md","filePath":"zh/guide/Mogan_versus_TeXmacs.md","lastUpdated":1736322693000}'),c={name:"zh/guide/Mogan_versus_TeXmacs.md"};function r(s,t,h,i,l,n){return o(),d("div",null,t[0]||(t[0]=[a('<h1 id="墨干理工套件和gnu-texmacs的区别" tabindex="-1">墨干理工套件和GNU TeXmacs的区别 <a class="header-anchor" href="#墨干理工套件和gnu-texmacs的区别" aria-label="Permalink to &quot;墨干理工套件和GNU TeXmacs的区别&quot;">​</a></h1><h2 id="产品定位" tabindex="-1">产品定位 <a class="header-anchor" href="#产品定位" aria-label="Permalink to &quot;产品定位&quot;">​</a></h2><p>墨干理工套件是自由的理工套件，包含墨干、墨码、墨板三大组件。其中墨干（Mogan Research）是GNU TeXmacs发行版之一，其定位和GNU TeXmacs一致，都是自由的科技编辑平台。</p><p>墨干作为GNU TeXmacs的发行版，在使用体验上尽可能和GNU TeXmacs保持一致，是由不同团队发行的同一类产品。墨码和墨板则是基于GNU TeXmacs排版引擎和结构化编辑器的全新产品。</p><p>本文着重强调墨干（Mogan Research）和GNU TeXmacs这两个同类产品的区别：</p><h2 id="一表以蔽之" tabindex="-1">一表以蔽之 <a class="header-anchor" href="#一表以蔽之" aria-label="Permalink to &quot;一表以蔽之&quot;">​</a></h2><table tabindex="0"><thead><tr><th></th><th>GNU TeXmacs</th><th>墨干</th></tr></thead><tbody><tr><td>发布周期</td><td>不固定</td><td>一个月至少一个版本</td></tr><tr><td>性能</td><td>慢</td><td>快</td></tr><tr><td>界面风格</td><td>复古风格</td><td>现代风格</td></tr><tr><td>Shortcuts</td><td>many of them do not work</td><td>99% of them work fine</td></tr><tr><td>Qt框架</td><td>主要是Qt 4 (个别是Qt 5)</td><td>主要是Qt 6 (个别是Qt 5)</td></tr><tr><td>Scheme引擎</td><td>GNU Guile 1.8.x</td><td>S7 Scheme</td></tr><tr><td>代码仓库</td><td>SVN (Savannah)</td><td>Git (Codeberg/Gitee/Github)</td></tr><tr><td>构建工具</td><td>GNU Autotools</td><td>xmake</td></tr><tr><td>主导者</td><td>Joris van der Hoeven (数学家)</td><td>沈浪熊猫儿 (软件工程师)</td></tr></tbody></table><h2 id="首选项" tabindex="-1">首选项 <a class="header-anchor" href="#首选项" aria-label="Permalink to &quot;首选项&quot;">​</a></h2><table tabindex="0"><thead><tr><th>选项</th><th>墨干</th><th>GNU TeXmacs</th></tr></thead><tbody><tr><td>通用<code>-&gt;</code>显示询问</td><td><code>通过弹出窗口</code></td><td><code>在状态栏</code></td></tr><tr><td>其他<code>-&gt;</code>执行文档更新</td><td><code>三次</code></td><td><code>一次</code></td></tr><tr><td>转换<code>-&gt;</code>PDF<code>-&gt;</code>展开幻灯片中的可折叠对象</td><td><code>开启</code></td><td><code>关闭</code></td></tr></tbody></table><h2 id="新建文档" tabindex="-1">新建文档 <a class="header-anchor" href="#新建文档" aria-label="Permalink to &quot;新建文档&quot;">​</a></h2><h3 id="默认启用焦点-布局-显示纸面边白-自v1-2-3起" tabindex="-1">默认启用<code>焦点-&gt;布局-&gt;显示纸面边白</code>（自V1.2.3起） <a class="header-anchor" href="#默认启用焦点-布局-显示纸面边白-自v1-2-3起" aria-label="Permalink to &quot;默认启用`焦点-&gt;布局-&gt;显示纸面边白`（自V1.2.3起）&quot;">​</a></h3><p>为什么：</p><ol><li>提供和WPS/MS Word类似的新空白文档体验，让新用户更容易上手</li><li><code>插入-&gt;注记-&gt;边注</code>可以立即生效，避免新用户误以为该功能不可用</li><li>当缩放比例是100%时，默认页面和导出的PDF以及打印在A4纸上几乎完全一样（实际使用A4纸对比，在左侧和右侧分别有10px的宽度未在屏幕上显示）</li></ol><h3 id="默认启用焦点-布局-不显示页码-自v1-2-3起" tabindex="-1">默认启用<code>焦点-&gt;布局-&gt;不显示页码</code>（自V1.2.3起） <a class="header-anchor" href="#默认启用焦点-布局-不显示页码-自v1-2-3起" aria-label="Permalink to &quot;默认启用`焦点-&gt;布局-&gt;不显示页码`（自V1.2.3起）&quot;">​</a></h3><p>不显示页码，让页面更加干净整洁。</p><h2 id="快捷键" tabindex="-1">快捷键 <a class="header-anchor" href="#快捷键" aria-label="Permalink to &quot;快捷键&quot;">​</a></h2><h3 id="快捷键前缀structured-cmd和structured-insert" tabindex="-1">快捷键前缀<code>structured:cmd</code>和<code>structured:insert</code> <a class="header-anchor" href="#快捷键前缀structured-cmd和structured-insert" aria-label="Permalink to &quot;快捷键前缀`structured:cmd`和`structured:insert`&quot;">​</a></h3><p>结构化命令键前缀主要和切换折叠状态、切换编号状态、结构化移动、结构化删除、结构化选择等功能的快捷键相关。</p><p>在Windows和Linux平台，结构化命令键前缀从<code>Alt</code>切换到了<code>Ctrl</code>，结构化插入键前缀从<code>Meta</code>切换到了<code>Alt</code>。</p><p>在macOS平台，结构化命令键前缀从<code>Option</code>切换到了<code>Ctrl</code>，结构化插入键前缀从<code>Ctrl</code>切换到了<code>Option</code>。</p><blockquote><p>为什么：通过切换结构化快捷键的两个键前缀，避免和和操作系统内置的快捷键冲突。比如<code>Meta+Left</code>在Windows上是Windows系统快捷键，<code>Ctrl+Left</code>在macOS上是macOS系统快捷键。</p></blockquote><h3 id="结构化变元轮换-自v1-2-3起" tabindex="-1">结构化变元轮换（自V1.2.3起） <a class="header-anchor" href="#结构化变元轮换-自v1-2-3起" aria-label="Permalink to &quot;结构化变元轮换（自V1.2.3起）&quot;">​</a></h3><p>全平台新增<code>A-S-up</code>和<code>A-S-down</code>这两个快捷键，用于在结构化变元之间切换。</p><p>在Windows和Linux平台仍然保留<code>C-tab</code>和<code>C-S-tab</code>的旧快捷键。在macOS平台，由于已经将<code>structured:cmd</code>从<code>Option</code>切换为了<code>Ctrl</code>，而且<code>C-tab</code>不可用，故而旧快捷键不生效。</p><blockquote><p>为什么：因为<code>C-tab</code>/<code>C-S-tab</code>/<code>A-S-tab</code>这三个快捷键在macOS平台不可用，详见<a href="https://bugreports.qt.io/browse/QTBUG-12232" target="_blank" rel="noreferrer">QTBUG-12232</a>。</p></blockquote><h3 id="esc键" tabindex="-1">ESC键 <a class="header-anchor" href="#esc键" aria-label="Permalink to &quot;ESC键&quot;">​</a></h3><p>在TeXmacs中，ESC键可用于模拟修饰键（比如Ctrl/Alt），但是在墨干中，ESC键是普通的按键，无法用于模拟修饰键。未来，ESC键或许可以被用于墨干的Vim插件。如果墨干中的快捷键和操作系统的内置快捷键冲突，我们会认为这是一个错误，会通过更改此类快捷键的方式修复错误，而不是用ESC键来规避错误。</p><h2 id="绘图模式" tabindex="-1">绘图模式 <a class="header-anchor" href="#绘图模式" aria-label="Permalink to &quot;绘图模式&quot;">​</a></h2><table tabindex="0"><thead><tr><th>菜单项</th><th>墨干</th><th>GNU TeXmacs</th></tr></thead><tbody><tr><td>插入<code>-&gt;</code>图像<code>-&gt;</code>绘制图形</td><td>显示网格</td><td>不显示网格</td></tr><tr><td>插入<code>-&gt;</code>图像<code>-&gt;</code>在当前焦点处绘制</td><td>显示网格</td><td>不显示网格</td></tr><tr><td>插入<code>-&gt;</code>网格<code>-&gt;</code>单位长度</td><td>2</td><td>1</td></tr></tbody></table><h2 id="插件" tabindex="-1">插件 <a class="header-anchor" href="#插件" aria-label="Permalink to &quot;插件&quot;">​</a></h2><p>绝大部分GNU TeXmacs中的插件不再是墨干的内置插件。只有Maxima会话插件和Octave会话插件保留下来作为墨干的内置插件。</p><p>插件的概念在墨干中有扩充，参考<a href="./plugins.html">插件概述</a>，比如自然语言相关的字典和样式以语言插件的形式维护。</p><p>插件中心将在未来版本的墨干中可用，方便用户一键安装社区插件。</p><h2 id="texmacs-home-path" tabindex="-1">TEXMACS_HOME_PATH <a class="header-anchor" href="#texmacs-home-path" aria-label="Permalink to &quot;TEXMACS_HOME_PATH&quot;">​</a></h2><table tabindex="0"><thead><tr><th>操作系统</th><th>墨干</th><th>GNU TeXmacs</th></tr></thead><tbody><tr><td>Linux</td><td><code>$XDG_DATA_HOME/XmacsLabs</code></td><td><code>$HOME/.TeXmacs</code></td></tr><tr><td></td><td><code>$HOME/.local/share/XmacsLabs</code></td><td></td></tr><tr><td>macOS</td><td><code>$HOME/Library/Application Support/XmacsLabs</code></td><td><code>$HOME/.TeXmacs</code></td></tr><tr><td>Windows</td><td><code>%APPDATA%\\XmacsLabs</code></td><td><code>%APPDATA%\\TeXmacs</code></td></tr><tr><td></td><td><code>C:\\Users\\用户名\\AppData\\Roaming\\XmacsLabs</code></td><td><code>C:\\Users\\用户名\\AppData\\Roaming\\TeXmacs</code></td></tr></tbody></table><blockquote><p>为什么：不同的路径是为了在系统上可以同时安装墨干和GNU TeXmacs，另外Linux和macOS的路径更改是为了符合Linux和macOS相关标准。</p></blockquote>',36)]))}const b=e(c,[["render",r]]);export{u as __pageData,b as default};
